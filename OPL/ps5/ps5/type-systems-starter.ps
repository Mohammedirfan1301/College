%!PS-Adobe-3.0
%%BoundingBox: 50 50 562 742
%%Title: Enscript Output
%%Creator: GNU Enscript 1.6.5.90
%%CreationDate: Wed Mar  9 11:52:56 2016
%%Orientation: Portrait
%%Pages: (atend)
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset Enscript-Prolog 1.6.5 90
%
% Procedures.
%

/_S {	% save current state
  /_s save def
} def
/_R {	% restore from saved state
  _s restore
} def

/S {	% showpage protecting gstate
  gsave
  showpage
  grestore
} bind def

/MF {	% fontname newfontname -> -	make a new encoded font
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  % insert only valid encoding vectors
  encoding_vector length 256 eq {
    newfont /Encoding encoding_vector put
  } if

  newfontname newfont definefont pop
} def

/MF_PS { % fontname newfontname -> -	make a new font preserving its enc
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  newfontname newfont definefont pop
} def

/SF { % fontname width height -> -	set a new font
  /height exch def
  /width exch def

  findfont
  [width 0 0 height 0 0] makefont setfont
} def

/SUF { % fontname width height -> -	set a new user font
  /height exch def
  /width exch def

  /F-gs-user-font MF
  /F-gs-user-font width height SF
} def

/SUF_PS { % fontname width height -> -	set a new user font preserving its enc
  /height exch def
  /width exch def

  /F-gs-user-font MF_PS
  /F-gs-user-font width height SF
} def

/M {moveto} bind def
/s {show} bind def

/Box {	% x y w h -> -			define box path
  /d_h exch def /d_w exch def /d_y exch def /d_x exch def
  d_x d_y  moveto
  d_w 0 rlineto
  0 d_h rlineto
  d_w neg 0 rlineto
  closepath
} def

/bgs {	% x y height blskip gray str -> -	show string with bg color
  /str exch def
  /gray exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    gray setgray
    fill
  grestore
  x y M str s
} def

/bgcs { % x y height blskip red green blue str -> -  show string with bg color
  /str exch def
  /blue exch def
  /green exch def
  /red exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    red green blue setrgbcolor
    fill
  grestore
  x y M str s
} def

% Highlight bars.
/highlight_bars {	% nlines lineheight output_y_margin gray -> -
  gsave
    setgray
    /ymarg exch def
    /lineheight exch def
    /nlines exch def

    % This 2 is just a magic number to sync highlight lines to text.
    0 d_header_y ymarg sub 2 sub translate

    /cw d_output_w cols div def
    /nrows d_output_h ymarg 2 mul sub lineheight div cvi def

    % for each column
    0 1 cols 1 sub {
      cw mul /xp exch def

      % for each rows
      0 1 nrows 1 sub {
        /rn exch def
        rn lineheight mul neg /yp exch def
        rn nlines idiv 2 mod 0 eq {
	  % Draw highlight bar.  4 is just a magic indentation.
	  xp 4 add yp cw 8 sub lineheight neg Box fill
	} if
      } for
    } for

  grestore
} def

% Line highlight bar.
/line_highlight {	% x y width height gray -> -
  gsave
    /gray exch def
    Box gray setgray fill
  grestore
} def

% Column separator lines.
/column_lines {
  gsave
    .1 setlinewidth
    0 d_footer_h translate
    /cw d_output_w cols div def
    1 1 cols 1 sub {
      cw mul 0 moveto
      0 d_output_h rlineto stroke
    } for
  grestore
} def

% Column borders.
/column_borders {
  gsave
    .1 setlinewidth
    0 d_footer_h moveto
    0 d_output_h rlineto
    d_output_w 0 rlineto
    0 d_output_h neg rlineto
    closepath stroke
  grestore
} def

% Do the actual underlay drawing
/draw_underlay {
  ul_style 0 eq {
    ul_str true charpath stroke
  } {
    ul_str show
  } ifelse
} def

% Underlay
/underlay {	% - -> -
  gsave
    0 d_page_h translate
    d_page_h neg d_page_w atan rotate

    ul_gray setgray
    ul_font setfont
    /dw d_page_h dup mul d_page_w dup mul add sqrt def
    ul_str stringwidth pop dw exch sub 2 div ul_h_ptsize -2 div moveto
    draw_underlay
  grestore
} def

/user_underlay {	% - -> -
  gsave
    ul_x ul_y translate
    ul_angle rotate
    ul_gray setgray
    ul_font setfont
    0 0 ul_h_ptsize 2 div sub moveto
    draw_underlay
  grestore
} def

% Page prefeed
/page_prefeed {		% bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} def

% Wrapped line markers
/wrapped_line_mark {	% x y charwith charheight type -> -
  /type exch def
  /h exch def
  /w exch def
  /y exch def
  /x exch def

  type 2 eq {
    % Black boxes (like TeX does)
    gsave
      0 setlinewidth
      x w 4 div add y M
      0 h rlineto w 2 div 0 rlineto 0 h neg rlineto
      closepath fill
    grestore
  } {
    type 3 eq {
      % Small arrows
      gsave
        .2 setlinewidth
        x w 2 div add y h 2 div add M
        w 4 div 0 rlineto
        x w 4 div add y lineto stroke

        x w 4 div add w 8 div add y h 4 div add M
        x w 4 div add y lineto
	w 4 div h 8 div rlineto stroke
      grestore
    } {
      % do nothing
    } ifelse
  } ifelse
} def

% EPSF import.

/BeginEPSF {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack
  userdict begin
  /showpage { } def
  0 setgray 0 setlinecap
  1 setlinewidth 0 setlinejoin
  10 setmiterlimit [ ] 0 setdash newpath
  /languagelevel where {
    pop languagelevel
    1 ne {
      false setstrokeadjust false setoverprint
    } if
  } if
} bind def

/EndEPSF {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse
%%EndResource
%%BeginResource: procset Enscript-Encoding-88591 1.6.5 90
/encoding_vector [
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclam       	/quotedbl     	/numbersign   	
/dollar       	/percent      	/ampersand    	/quoteright   	
/parenleft    	/parenright   	/asterisk     	/plus         	
/comma        	/hyphen       	/period       	/slash        	
/zero         	/one          	/two          	/three        	
/four         	/five         	/six          	/seven        	
/eight        	/nine         	/colon        	/semicolon    	
/less         	/equal        	/greater      	/question     	
/at           	/A            	/B            	/C            	
/D            	/E            	/F            	/G            	
/H            	/I            	/J            	/K            	
/L            	/M            	/N            	/O            	
/P            	/Q            	/R            	/S            	
/T            	/U            	/V            	/W            	
/X            	/Y            	/Z            	/bracketleft  	
/backslash    	/bracketright 	/asciicircum  	/underscore   	
/quoteleft    	/a            	/b            	/c            	
/d            	/e            	/f            	/g            	
/h            	/i            	/j            	/k            	
/l            	/m            	/n            	/o            	
/p            	/q            	/r            	/s            	
/t            	/u            	/v            	/w            	
/x            	/y            	/z            	/braceleft    	
/bar          	/braceright   	/tilde        	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclamdown   	/cent         	/sterling     	
/currency     	/yen          	/brokenbar    	/section      	
/dieresis     	/copyright    	/ordfeminine  	/guillemotleft	
/logicalnot   	/hyphen       	/registered   	/macron       	
/degree       	/plusminus    	/twosuperior  	/threesuperior	
/acute        	/mu           	/paragraph    	/bullet       	
/cedilla      	/onesuperior  	/ordmasculine 	/guillemotright	
/onequarter   	/onehalf      	/threequarters	/questiondown 	
/Agrave       	/Aacute       	/Acircumflex  	/Atilde       	
/Adieresis    	/Aring        	/AE           	/Ccedilla     	
/Egrave       	/Eacute       	/Ecircumflex  	/Edieresis    	
/Igrave       	/Iacute       	/Icircumflex  	/Idieresis    	
/Eth          	/Ntilde       	/Ograve       	/Oacute       	
/Ocircumflex  	/Otilde       	/Odieresis    	/multiply     	
/Oslash       	/Ugrave       	/Uacute       	/Ucircumflex  	
/Udieresis    	/Yacute       	/Thorn        	/germandbls   	
/agrave       	/aacute       	/acircumflex  	/atilde       	
/adieresis    	/aring        	/ae           	/ccedilla     	
/egrave       	/eacute       	/ecircumflex  	/edieresis    	
/igrave       	/iacute       	/icircumflex  	/idieresis    	
/eth          	/ntilde       	/ograve       	/oacute       	
/ocircumflex  	/otilde       	/odieresis    	/divide       	
/oslash       	/ugrave       	/uacute       	/ucircumflex  	
/udieresis    	/yacute       	/thorn        	/ydieresis    	
] def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Courier
/HFpt_w 10 def
/HFpt_h 10 def
/Courier-Bold /HF-gs-font MF
/HF /HF-gs-font findfont [HFpt_w 0 0 HFpt_h 0 0] makefont def
/Courier /F-gs-font MF
/F-gs-font 10 10 SF
/#copies 1 def
% Pagedevice definitions:
gs_languagelevel 1 gt {
  <<
    /PageSize [612 792] 
  >> setpagedevice
} if
%%BeginResource: procset Enscript-Header-simple 1.6.5 90

/do_header {	% print default simple header
  gsave
    d_header_x d_header_y HFpt_h 3 div add translate

    HF setfont
    user_header_p {
      5 0 moveto user_header_left_str show

      d_header_w user_header_center_str stringwidth pop sub 2 div
      0 moveto user_header_center_str show

      d_header_w user_header_right_str stringwidth pop sub 5 sub
      0 moveto user_header_right_str show
    } {
      5 0 moveto fname show
      45 0 rmoveto fmodstr show
      45 0 rmoveto pagenumstr show
    } ifelse

  grestore
} def
%%EndResource
/d_page_w 512 def
/d_page_h 692 def
/d_header_x 0 def
/d_header_y 677 def
/d_header_w 512 def
/d_header_h 15 def
/d_footer_x 0 def
/d_footer_y 0 def
/d_footer_w 512 def
/d_footer_h 0 def
/d_output_w 512 def
/d_output_h 677 def
/cols 1 def
%%EndSetup
%%Page: (1) 1
%%BeginPageSetup
_S
50 50 translate
/pagenum 1 def
/fname (type-systems-starter.rkt) def
/fdir (.) def
/ftail (type-systems-starter.rkt) def
% User defined strings:
/fmodstr (Wed Mar 09 11:51:34 2016) def
/pagenumstr (1) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
do_header
5 664 M
(#lang racket) s
5 642 M
(;;; re-written by fredm using hash instead of mutable pairs) s
5 631 M
(\(define \(make-table\)) s
5 620 M
(  \(let \(\(local-table \(make-hash\)\)\)) s
5 609 M
(    \(define \(lookup key-1 key-2\)) s
5 598 M
(      \(hash-ref local-table \(list key-1 key-2\) #f\)\)) s
5 587 M
(    \(define \(insert! key-1 key-2 value\)) s
5 576 M
(      \(hash-set! local-table \(list key-1 key-2\) value\)) s
5 565 M
(      'ok\)) s
5 554 M
(    \(define \(dispatch m\)) s
5 543 M
(      \(cond \(\(eq? m 'lookup-proc\) lookup\)) s
5 532 M
(            \(\(eq? m 'insert-proc!\) insert!\)) s
5 521 M
(            \(else \(error "Unknown operation -- TABLE" m\)\)\)\)) s
5 510 M
(    dispatch\)\)) s
5 488 M
(\(define operation-table \(make-table\)\)) s
5 477 M
(\(define get \(operation-table 'lookup-proc\)\)) s
5 466 M
(\(define put \(operation-table 'insert-proc!\)\)) s
5 444 M
(;;; Code for the generic arithmetic system.  Start) s
5 433 M
(;;; to read and understand here.) s
5 422 M
(\(define \(attach-tag type-tag contents\)) s
5 411 M
(  \(cons type-tag contents\)\)) s
5 389 M
(\(define \(type-tag datum\)) s
5 378 M
(  \(if \(pair? datum\)) s
5 367 M
(      \(car datum\)) s
5 356 M
(    \(display \(list "Bad tagged datum --- TYPE-TAG" datum\)\)\)\)) s
5 334 M
(\(define \(contents datum\)) s
5 323 M
(  \(if \(pair? datum\)) s
5 312 M
(      \(cdr datum\)) s
5 301 M
(    \(display \(list "Bad tagged datum --- CONTENTS" datum\)\)\)\)) s
5 279 M
(\(define \(square x\) \(* x x\)\)) s
5 257 M
(\(define \(install-rectangular-package\)) s
5 246 M
(  ;; internal procedures) s
5 235 M
(  \(define \(real-part z\) \(car z\)\)) s
5 224 M
(  \(define \(imag-part z\) \(cdr z\)\)) s
5 213 M
(  \(define \(make-from-real-imag x y\) \(cons x y\)\)) s
5 202 M
(  \(define \(magnitude z\)) s
5 191 M
(    \(sqrt \(+ \(square \(real-part z\)\)) s
5 180 M
(             \(square \(imag-part z\)\)\)\)\)) s
5 169 M
(  \(define \(angle z\)) s
5 158 M
(    \(atan \(imag-part z\) \(real-part z\)\)\)) s
5 147 M
(  \(define \(make-from-mag-ang r a\) ) s
5 136 M
(    \(cons \(* r \(cos a\)\) \(* r \(sin a\)\)\)\)) s
5 114 M
(  ;; interface to the rest of the system) s
5 103 M
(  \(define \(tag x\) \(attach-tag 'rectangular x\)\)) s
5 92 M
(  \(put 'real-part '\(rectangular\) real-part\)) s
5 81 M
(  \(put 'imag-part '\(rectangular\) imag-part\)) s
5 70 M
(  \(put 'magnitude '\(rectangular\) magnitude\)) s
5 59 M
(  \(put 'angle '\(rectangular\) angle\)) s
5 48 M
(  \(put 'make-from-real-imag 'rectangular) s
5 37 M
(       \(lambda \(x y\) \(tag \(make-from-real-imag x y\)\)\)\)) s
5 26 M
(  \(put 'make-from-mag-ang 'rectangular) s
5 15 M
(       \(lambda \(r a\) \(tag \(make-from-mag-ang r a\)\)\)\)) s
5 4 M
(  "installed rectangular package"\)) s
_R
S
%%Page: (2) 2
%%BeginPageSetup
_S
50 50 translate
/pagenum 2 def
/fname (type-systems-starter.rkt) def
/fdir (.) def
/ftail (type-systems-starter.rkt) def
% User defined strings:
/fmodstr (Wed Mar 09 11:51:34 2016) def
/pagenumstr (2) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
do_header
5 653 M
(\(define \(install-polar-package\)) s
5 642 M
(  ;; internal procedures) s
5 631 M
(  \(define \(magnitude z\) \(car z\)\)) s
5 620 M
(  \(define \(angle z\) \(cdr z\)\)) s
5 609 M
(  \(define \(make-from-mag-ang r a\) \(cons r a\)\)) s
5 598 M
(  \(define \(real-part z\)) s
5 587 M
(    \(* \(magnitude z\) \(cos \(angle z\)\)\)\)) s
5 576 M
(  \(define \(imag-part z\)) s
5 565 M
(    \(* \(magnitude z\) \(sin \(angle z\)\)\)\)) s
5 554 M
(  \(define \(make-from-real-imag x y\) ) s
5 543 M
(    \(cons \(sqrt \(+ \(square x\) \(square y\)\)\)) s
5 532 M
(          \(atan y x\)\)\)) s
5 510 M
(  ;; interface to the rest of the system) s
5 499 M
(  \(define \(tag x\) \(attach-tag 'polar x\)\)) s
5 488 M
(  \(put 'real-part '\(polar\) real-part\)) s
5 477 M
(  \(put 'imag-part '\(polar\) imag-part\)) s
5 466 M
(  \(put 'magnitude '\(polar\) magnitude\)) s
5 455 M
(  \(put 'angle '\(polar\) angle\)) s
5 444 M
(  \(put 'make-from-real-imag 'polar) s
5 433 M
(       \(lambda \(x y\) \(tag \(make-from-real-imag x y\)\)\)\)) s
5 422 M
(  \(put 'make-from-mag-ang 'polar) s
5 411 M
(       \(lambda \(r a\) \(tag \(make-from-mag-ang r a\)\)\)\)) s
5 400 M
(  "installed polar package"\)) s
5 378 M
(\(define \(real-part z\) \(apply-generic 'real-part z\)\)) s
5 367 M
(\(define \(imag-part z\) \(apply-generic 'imag-part z\)\)) s
5 356 M
(\(define \(magnitude z\) \(apply-generic 'magnitude z\)\)) s
5 345 M
(\(define \(angle z\) \(apply-generic 'angle z\)\)) s
5 323 M
(\(define \(make-from-real-imag x y\)) s
5 312 M
(  \(\(get 'make-from-real-imag 'rectangular\) x y\)\)) s
5 290 M
(\(define \(make-from-mag-ang r a\)) s
5 279 M
(  \(\(get 'make-from-mag-ang 'polar\) r a\)\)) s
5 257 M
(\(define \(add x y\) \(apply-generic 'add x y\)\)) s
5 246 M
(\(define \(sub x y\) \(apply-generic 'sub x y\)\)) s
5 235 M
(\(define \(mul x y\) \(apply-generic 'mul x y\)\)) s
5 224 M
(\(define \(div x y\) \(apply-generic 'div x y\)\)) s
5 202 M
(\(define \(install-scheme-number-package\)) s
5 191 M
(  \(define \(tag x\)) s
5 180 M
(    \(attach-tag 'scheme-number x\)\)) s
5 169 M
(  \(put 'add '\(scheme-number scheme-number\)) s
5 158 M
(       \(lambda \(x y\) \(tag \(+ x y\)\)\)\)) s
5 147 M
(  \(put 'sub '\(scheme-number scheme-number\)) s
5 136 M
(       \(lambda \(x y\) \(tag \(- x y\)\)\)\)) s
5 125 M
(  \(put 'mul '\(scheme-number scheme-number\)) s
5 114 M
(       \(lambda \(x y\) \(tag \(* x y\)\)\)\)) s
5 103 M
(  \(put 'div '\(scheme-number scheme-number\)) s
5 92 M
(       \(lambda \(x y\) \(tag \(/ x y\)\)\)\)) s
5 81 M
(  \(put 'make 'scheme-number) s
5 70 M
(       \(lambda \(x\) \(tag x\)\)\)) s
5 59 M
(  "installed scheme number package"\)) s
5 37 M
(\(define \(make-scheme-number n\)) s
5 26 M
(  \(\(get 'make 'scheme-number\) n\)\)) s
5 4 M
(\(define \(install-rational-package\)) s
_R
S
%%Page: (3) 3
%%BeginPageSetup
_S
50 50 translate
/pagenum 3 def
/fname (type-systems-starter.rkt) def
/fdir (.) def
/ftail (type-systems-starter.rkt) def
% User defined strings:
/fmodstr (Wed Mar 09 11:51:34 2016) def
/pagenumstr (3) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
do_header
5 664 M
(  ;; internal procedures) s
5 653 M
(  \(define \(numer x\) \(car x\)\)) s
5 642 M
(  \(define \(denom x\) \(cdr x\)\)) s
5 631 M
(  \(define \(make-rat n d\)) s
5 620 M
(    \(let \(\(g \(gcd n d\)\)\)) s
5 609 M
(      \(cons \(/ n g\) \(/ d g\)\)\)\)) s
5 598 M
(  \(define \(add-rat x y\)) s
5 587 M
(    \(make-rat \(+ \(* \(numer x\) \(denom y\)\)) s
5 576 M
(                 \(* \(numer y\) \(denom x\)\)\)) s
5 565 M
(              \(* \(denom x\) \(denom y\)\)\)\)) s
5 554 M
(  \(define \(sub-rat x y\)) s
5 543 M
(    \(make-rat \(- \(* \(numer x\) \(denom y\)\)) s
5 532 M
(                 \(* \(numer y\) \(denom x\)\)\)) s
5 521 M
(              \(* \(denom x\) \(denom y\)\)\)\)) s
5 510 M
(  \(define \(mul-rat x y\)) s
5 499 M
(    \(make-rat \(* \(numer x\) \(numer y\)\)) s
5 488 M
(              \(* \(denom x\) \(denom y\)\)\)\)) s
5 477 M
(  \(define \(div-rat x y\)) s
5 466 M
(    \(make-rat \(* \(numer x\) \(denom y\)\)) s
5 455 M
(              \(* \(denom x\) \(numer y\)\)\)\)) s
5 444 M
(  ;; interface to rest of the system) s
5 433 M
(  \(define \(tag x\) \(attach-tag 'rational x\)\)) s
5 422 M
(  \(put 'add '\(rational rational\)) s
5 411 M
(       \(lambda \(x y\) \(tag \(add-rat x y\)\)\)\)) s
5 400 M
(  \(put 'sub '\(rational rational\)) s
5 389 M
(       \(lambda \(x y\) \(tag \(sub-rat x y\)\)\)\)) s
5 378 M
(  \(put 'mul '\(rational rational\)) s
5 367 M
(       \(lambda \(x y\) \(tag \(mul-rat x y\)\)\)\)) s
5 356 M
(  \(put 'div '\(rational rational\)) s
5 345 M
(       \(lambda \(x y\) \(tag \(div-rat x y\)\)\)\)) s
5 323 M
(  \(put 'make 'rational) s
5 312 M
(       \(lambda \(n d\) \(tag \(make-rat n d\)\)\)\)) s
5 301 M
(  "installed rational package"\)) s
5 279 M
(\(define \(make-rat n d\)) s
5 268 M
(  \(\(get 'make 'rational\) n d\)\)) s
5 246 M
(\(define \(install-complex-package\)) s
5 235 M
(  ;; imported procedures from rectangular and polar packages) s
5 224 M
(  \(define \(make-from-real-imag x y\)) s
5 213 M
(    \(\(get 'make-from-real-imag 'rectangular\) x y\)\)) s
5 202 M
(  \(define \(make-from-mag-ang r a\)) s
5 191 M
(    \(\(get 'make-from-mag-ang 'polar\) r a\)\)) s
5 180 M
(  ;; internal procedures) s
5 169 M
(  \(define \(add-complex z1 z2\)) s
5 158 M
(    \(make-from-real-imag \(+ \(real-part z1\) \(real-part z2\)\)) s
5 147 M
(                         \(+ \(imag-part z1\) \(imag-part z2\)\)\)\)) s
5 136 M
(  \(define \(sub-complex z1 z2\)) s
5 125 M
(    \(make-from-real-imag \(- \(real-part z1\) \(real-part z2\)\)) s
5 114 M
(                         \(- \(imag-part z1\) \(imag-part z2\)\)\)\)) s
5 103 M
(  \(define \(mul-complex z1 z2\)) s
5 92 M
(    \(make-from-mag-ang \(* \(magnitude z1\) \(magnitude z2\)\)) s
5 81 M
(                       \(+ \(angle z1\) \(angle z2\)\)\)\)) s
5 70 M
(  \(define \(div-complex z1 z2\)) s
5 59 M
(    \(make-from-mag-ang \(/ \(magnitude z1\) \(magnitude z2\)\)) s
5 48 M
(                       \(- \(angle z1\) \(angle z2\)\)\)\)) s
5 26 M
(  ;; interface to rest of the system) s
5 15 M
(  \(define \(tag z\) \(attach-tag 'complex z\)\)) s
5 4 M
(  \(put 'add '\(complex complex\)) s
_R
S
%%Page: (4) 4
%%BeginPageSetup
_S
50 50 translate
/pagenum 4 def
/fname (type-systems-starter.rkt) def
/fdir (.) def
/ftail (type-systems-starter.rkt) def
% User defined strings:
/fmodstr (Wed Mar 09 11:51:34 2016) def
/pagenumstr (4) def
/user_header_p false def
/user_footer_p false def
%%EndPageSetup
do_header
5 664 M
(       \(lambda \(z1 z2\) \(tag \(add-complex z1 z2\)\)\)\)) s
5 653 M
(  \(put 'sub '\(complex complex\)) s
5 642 M
(       \(lambda \(z1 z2\) \(tag \(sub-complex z1 z2\)\)\)\)) s
5 631 M
(  \(put 'mul '\(complex complex\)) s
5 620 M
(       \(lambda \(z1 z2\) \(tag \(mul-complex z1 z2\)\)\)\)) s
5 609 M
(  \(put 'div '\(complex complex\)) s
5 598 M
(       \(lambda \(z1 z2\) \(tag \(div-complex z1 z2\)\)\)\)) s
5 587 M
(  \(put 'make-from-real-imag 'complex) s
5 576 M
(       \(lambda \(x y\) \(tag \(make-from-real-imag x y\)\)\)\)) s
5 565 M
(  \(put 'make-from-mag-ang 'complex) s
5 554 M
(       \(lambda \(r a\) \(tag \(make-from-mag-ang r a\)\)\)\)) s
5 543 M
(  "installed complex package"\)) s
5 521 M
(\(define \(make-complex-from-real-imag x y\)) s
5 510 M
(  \(\(get 'make-from-real-imag 'complex\) x y\)\)) s
5 488 M
(\(define \(make-complex-from-mag-ang r a\)) s
5 477 M
(  \(\(get 'make-from-mag-ang 'complex\) r a\)\)) s
5 455 M
(;;; install packages) s
5 444 M
(\(install-rectangular-package\)) s
5 433 M
(\(install-polar-package\)) s
5 422 M
(\(install-scheme-number-package\)) s
5 411 M
(\(install-rational-package\)) s
5 400 M
(\(install-complex-package\)) s
5 378 M
(;;; ALL OF THE MAGIC HAPPENS HERE) s
5 367 M
(;;; make sure you understand this deeply and well) s
5 356 M
(\(define \(apply-generic op . args\)) s
5 345 M
(  \(let \(\(type-tags \(map type-tag args\)\)\)) s
5 334 M
(    \(let \(\(proc \(get op type-tags\)\)\)) s
5 323 M
(      \(if proc) s
5 312 M
(          \(apply proc \(map contents args\)\)) s
5 301 M
(        \(display \(list) s
5 290 M
(                  "No method for these types -- APPLY-GENERIC") s
5 279 M
(                  \(list op type-tags\)\)\)\)\)\)\)) s
5 257 M
(;;; SOME TEST CODE) s
5 246 M
(;\(define n1 \(make-scheme-number 1\)\)     ; \(scheme-number . 1\)) s
5 235 M
(;\(define n2 \(make-scheme-number 2\)\)     ; \(scheme-number . 2\)) s
5 224 M
(;;\(add n1 n2\)                           ) s
5 213 M
(                                        ; \(scheme-number . 3\)) s
5 191 M
(;\(define r1 \(make-rat 3 4\)\)             ; \(rational 3 . 4\)) s
5 180 M
(;\(define r2 \(make-rat 5 6\)\)             ; \(rational 5 . 6\)) s
5 169 M
(;; \(add r1 r2\)) s
5 158 M
(                                        ; \(rational 19 . 12\)) s
5 136 M
(;\(define z1 \(make-complex-from-real-imag 1 1\)\) ; \(complex rectangular 1 . 1\)) s
5 125 M
(;\(define z2 \(make-complex-from-mag-ang 2 0\)\)   ; \(complex polar 2 . 0\)) s
5 114 M
(;;; \(mul z1 z2\)) s
5 103 M
(;;; \(complex polar 2.8284271247461903 . 0.7853981633974483\)) s
_R
S
%%Trailer
%%Pages: 4
%%DocumentNeededResources: font Courier-Bold Courier 
%%EOF
